// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250510132640_FlagConsistencyType")]
    partial class FlagConsistencyType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Aggregation.AirCrafts.AirCraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AircraftType")
                        .HasColumnType("integer")
                        .HasColumnName("aircraft_type");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("registration_number");

                    b.HasKey("Id")
                        .HasName("pk_air_crafts");

                    b.HasIndex("RegistrationNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_air_crafts_registration_number");

                    b.ToTable("air_crafts", (string)null);
                });

            modelBuilder.Entity("Domain.Aggregation.Airports.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_airports");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("ix_airports_code");

                    b.ToTable("airports", (string)null);
                });

            modelBuilder.Entity("Domain.Aggregation.Flights.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AirCraftId")
                        .HasColumnType("integer")
                        .HasColumnName("air_craft_id");

                    b.Property<int>("ArrivalAirportId")
                        .HasColumnType("integer")
                        .HasColumnName("arrival_airport_id");

                    b.Property<DateTime>("ArrivalDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("arrival_date_time");

                    b.Property<int>("ConsistencyType")
                        .HasColumnType("integer")
                        .HasColumnName("consistency_type");

                    b.Property<int>("DepartureAirportId")
                        .HasColumnType("integer")
                        .HasColumnName("departure_airport_id");

                    b.Property<DateTime>("DepartureDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("departure_date_time");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("flight_number");

                    b.HasKey("Id")
                        .HasName("pk_flights");

                    b.HasIndex("AirCraftId")
                        .HasDatabaseName("ix_flights_air_craft_id");

                    b.HasIndex("ArrivalAirportId")
                        .HasDatabaseName("ix_flights_arrival_airport_id");

                    b.HasIndex("DepartureAirportId")
                        .HasDatabaseName("ix_flights_departure_airport_id");

                    b.ToTable("flights", (string)null);
                });

            modelBuilder.Entity("Domain.Aggregation.Flights.Flight", b =>
                {
                    b.HasOne("Domain.Aggregation.AirCrafts.AirCraft", "AirCraft")
                        .WithMany()
                        .HasForeignKey("AirCraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_flights_air_crafts_air_craft_id");

                    b.HasOne("Domain.Aggregation.Airports.Airport", "ArrivalAirport")
                        .WithMany()
                        .HasForeignKey("ArrivalAirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_flights_airports_arrival_airport_id");

                    b.HasOne("Domain.Aggregation.Airports.Airport", "DepartureAirport")
                        .WithMany()
                        .HasForeignKey("DepartureAirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_flights_airports_departure_airport_id");

                    b.Navigation("AirCraft");

                    b.Navigation("ArrivalAirport");

                    b.Navigation("DepartureAirport");
                });
#pragma warning restore 612, 618
        }
    }
}
